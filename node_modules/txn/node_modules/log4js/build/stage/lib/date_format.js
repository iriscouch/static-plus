/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['date_format.js']) {
  _$jscoverage['date_format.js'] = [];
  _$jscoverage['date_format.js'][1] = 0;
  _$jscoverage['date_format.js'][2] = 0;
  _$jscoverage['date_format.js'][3] = 0;
  _$jscoverage['date_format.js'][4] = 0;
  _$jscoverage['date_format.js'][6] = 0;
  _$jscoverage['date_format.js'][7] = 0;
  _$jscoverage['date_format.js'][8] = 0;
  _$jscoverage['date_format.js'][9] = 0;
  _$jscoverage['date_format.js'][10] = 0;
  _$jscoverage['date_format.js'][13] = 0;
  _$jscoverage['date_format.js'][14] = 0;
  _$jscoverage['date_format.js'][15] = 0;
  _$jscoverage['date_format.js'][16] = 0;
  _$jscoverage['date_format.js'][17] = 0;
  _$jscoverage['date_format.js'][18] = 0;
  _$jscoverage['date_format.js'][19] = 0;
  _$jscoverage['date_format.js'][20] = 0;
  _$jscoverage['date_format.js'][21] = 0;
  _$jscoverage['date_format.js'][22] = 0;
  _$jscoverage['date_format.js'][23] = 0;
  _$jscoverage['date_format.js'][32] = 0;
  _$jscoverage['date_format.js'][34] = 0;
  _$jscoverage['date_format.js'][35] = 0;
  _$jscoverage['date_format.js'][36] = 0;
  _$jscoverage['date_format.js'][37] = 0;
  _$jscoverage['date_format.js'][39] = 0;
  _$jscoverage['date_format.js'][42] = 0;
  _$jscoverage['date_format.js'][43] = 0;
  _$jscoverage['date_format.js'][51] = 0;
  _$jscoverage['date_format.js'][53] = 0;
  _$jscoverage['date_format.js'][54] = 0;
  _$jscoverage['date_format.js'][55] = 0;
  _$jscoverage['date_format.js'][56] = 0;
  _$jscoverage['date_format.js'][57] = 0;
  _$jscoverage['date_format.js'][58] = 0;
}
_$jscoverage['date_format.js'][1]++;
exports.ISO8601_FORMAT = "yyyy-MM-dd hh:mm:ss.SSS";
_$jscoverage['date_format.js'][2]++;
exports.ISO8601_WITH_TZ_OFFSET_FORMAT = "yyyy-MM-ddThh:mm:ssO";
_$jscoverage['date_format.js'][3]++;
exports.DATETIME_FORMAT = "dd MM yyyy hh:mm:ss.SSS";
_$jscoverage['date_format.js'][4]++;
exports.ABSOLUTETIME_FORMAT = "hh:mm:ss.SSS";
_$jscoverage['date_format.js'][6]++;
exports.asString = (function (date) {
  _$jscoverage['date_format.js'][7]++;
  var format = exports.ISO8601_FORMAT;
  _$jscoverage['date_format.js'][8]++;
  if (typeof date === "string") {
    _$jscoverage['date_format.js'][9]++;
    format = arguments[0];
    _$jscoverage['date_format.js'][10]++;
    date = arguments[1];
  }
  _$jscoverage['date_format.js'][13]++;
  var vDay = addZero(date.getDate());
  _$jscoverage['date_format.js'][14]++;
  var vMonth = addZero(date.getMonth() + 1);
  _$jscoverage['date_format.js'][15]++;
  var vYearLong = addZero(date.getFullYear());
  _$jscoverage['date_format.js'][16]++;
  var vYearShort = addZero(date.getFullYear().toString().substring(3, 4));
  _$jscoverage['date_format.js'][17]++;
  var vYear = (format.indexOf("yyyy") > -1? vYearLong: vYearShort);
  _$jscoverage['date_format.js'][18]++;
  var vHour = addZero(date.getHours());
  _$jscoverage['date_format.js'][19]++;
  var vMinute = addZero(date.getMinutes());
  _$jscoverage['date_format.js'][20]++;
  var vSecond = addZero(date.getSeconds());
  _$jscoverage['date_format.js'][21]++;
  var vMillisecond = padWithZeros(date.getMilliseconds(), 3);
  _$jscoverage['date_format.js'][22]++;
  var vTimeZone = offset(date);
  _$jscoverage['date_format.js'][23]++;
  var formatted = format.replace(/dd/g, vDay).replace(/MM/g, vMonth).replace(/y{1,4}/g, vYear).replace(/hh/g, vHour).replace(/mm/g, vMinute).replace(/ss/g, vSecond).replace(/SSS/g, vMillisecond).replace(/O/g, vTimeZone);
  _$jscoverage['date_format.js'][32]++;
  return formatted;
  _$jscoverage['date_format.js'][34]++;
  function padWithZeros(vNumber, width) {
    _$jscoverage['date_format.js'][35]++;
    var numAsString = vNumber + "";
    _$jscoverage['date_format.js'][36]++;
    while (numAsString.length < width) {
      _$jscoverage['date_format.js'][37]++;
      numAsString = "0" + numAsString;
}
    _$jscoverage['date_format.js'][39]++;
    return numAsString;
}
  _$jscoverage['date_format.js'][42]++;
  function addZero(vNumber) {
    _$jscoverage['date_format.js'][43]++;
    return padWithZeros(vNumber, 2);
}
  _$jscoverage['date_format.js'][51]++;
  function offset(date) {
    _$jscoverage['date_format.js'][53]++;
    var os = Math.abs(date.getTimezoneOffset());
    _$jscoverage['date_format.js'][54]++;
    var h = String(Math.floor(os / 60));
    _$jscoverage['date_format.js'][55]++;
    var m = String(os % 60);
    _$jscoverage['date_format.js'][56]++;
    h.length == 1? h = "0" + h: 1;
    _$jscoverage['date_format.js'][57]++;
    m.length == 1? m = "0" + m: 1;
    _$jscoverage['date_format.js'][58]++;
    return date.getTimezoneOffset() < 0? "+" + h + m: "-" + h + m;
}
});
_$jscoverage['date_format.js'].source = ["exports.ISO8601_FORMAT = \"yyyy-MM-dd hh:mm:ss.SSS\";","exports.ISO8601_WITH_TZ_OFFSET_FORMAT = \"yyyy-MM-ddThh:mm:ssO\";","exports.DATETIME_FORMAT = \"dd MM yyyy hh:mm:ss.SSS\";","exports.ABSOLUTETIME_FORMAT = \"hh:mm:ss.SSS\";","","exports.asString = function(/*format,*/ date) {","    var format = exports.ISO8601_FORMAT;","    if (typeof(date) === \"string\") {","        format = arguments[0];","        date = arguments[1];","    }","","    var vDay = addZero(date.getDate());","    var vMonth = addZero(date.getMonth()+1);","    var vYearLong = addZero(date.getFullYear());","    var vYearShort = addZero(date.getFullYear().toString().substring(3,4));","    var vYear = (format.indexOf(\"yyyy\") &gt; -1 ? vYearLong : vYearShort);","    var vHour  = addZero(date.getHours());","    var vMinute = addZero(date.getMinutes());","    var vSecond = addZero(date.getSeconds());","    var vMillisecond = padWithZeros(date.getMilliseconds(), 3);","    var vTimeZone = offset(date);","    var formatted = format","                      .replace(/dd/g, vDay)","                      .replace(/MM/g, vMonth)","                      .replace(/y{1,4}/g, vYear)","                      .replace(/hh/g, vHour)","                      .replace(/mm/g, vMinute)","                      .replace(/ss/g, vSecond)","                      .replace(/SSS/g, vMillisecond)","                      .replace(/O/g, vTimeZone);","    return formatted;","","    function padWithZeros(vNumber, width) {","\tvar numAsString = vNumber + \"\";","\twhile (numAsString.length &lt; width) {","\t    numAsString = \"0\" + numAsString;","\t}","\treturn numAsString;","    }","","    function addZero(vNumber) {","\treturn padWithZeros(vNumber, 2);","    }","","    /**","     * Formats the TimeOffest","     * Thanks to http://www.svendtofte.com/code/date_format/","     * @private","     */","    function offset(date) {","\t// Difference to Greenwich time (GMT) in hours","\tvar os = Math.abs(date.getTimezoneOffset());","\tvar h = String(Math.floor(os/60));","\tvar m = String(os%60);","\th.length == 1? h = \"0\"+h:1;","\tm.length == 1? m = \"0\"+m:1;","\treturn date.getTimezoneOffset() &lt; 0 ? \"+\"+h+m : \"-\"+h+m;","    }","};"];
